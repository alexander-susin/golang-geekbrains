image: malkinfedor/golang-gitlab-image:1.15.1

variables:
  DOCKER_IMAGE_NAME: "hello-world" 
  DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
  DOCKER_REPO: "malkinfedor"
  
stages:
  - build
  - test

#dockerlogin-test:
#  image: docker:19.03.13
#  stage: docker-test
#  script:
#    - docker image ls && cat /etc/os-release
#    - mkdir -p ~/.docker/ 
#    - echo ${DOCKERCONFIG} > ~/.docker/config.json
    
unit_tests:
  stage: test
  script:
    - go test -short

race_detector:
  stage: test
  script:
    - go test -race -short

memory_sanitizer:
  stage: test
  script:
    - go test -msan -short

#code_coverage:
#  stage: test
#  script:
#    - make coverage

#code_coverage_report:
#  stage: test
#  script:
#    - make coverhtml
#  only:
#  - master

lint_code:
  stage: test
  script:
    - golint -set_exit_status

#common-build:
#  stage: build
#  artifacts:
#    paths:
#      - golang-helloworld
#    expire_in: 1 week
#  script:
#    - go build -i -v


docker-build:
  image: docker:19.03.13
  services:
    - docker:dind
#  before_script:
#    - mkdir -p ~/.docker/ 
#    - cp -r docker-config.json /root/.docker/config.json 
#    - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
#    - cat /root/.docker/config.json 
  stage: build
  script:
#    - docker login -u malkinfedor -p 3165420c-9395-443b-98b0-f19b01d82689
    - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
    - docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} .
    - docker tag ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}  
    - docker run ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG} 
    - docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}
    - echo "The image was succesfully pushed:" ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}   

