#image: malkinfedor/golang-gitlab-image:1.15.2

variables:
  DOCKER_IMAGE_NAME: "hello-world" 
  DOCKER_TAG: ${CI_COMMIT_REF_SLUG}
  DOCKER_REPO: "malkinfedor"
  GITLAB_CONT_REGISTRY_IMG_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  
stages:
  - test
  - build
  - deploy

unit_tests:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - go test -short

race_detector:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - go test -race -short

memory_sanitizer:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - go test -msan -short

code_coverage_report:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - go test -covermode=count -coverprofile hello-world.cov
    - go tool cover -html=hello-world.cov -o coverage.html
  artifacts:
    paths:
      - coverage.html
    expire_in: 1 week

# https://docs.gitlab.com/ee/ci/unit_test_reports.html#go-example
junit_tests:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - go test -v 2>&1 | go-junit-report -set-exit-code > report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

lint_code:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: test
  script:
    - golint -set_exit_status

common-build:
  image: malkinfedor/golang-gitlab-image:1.15.2
  stage: build
  artifacts:
    paths:
      - $CI_PROJECT_NAME
    expire_in: 1 week
  script:
    - go build -i -v

# How to build with dnd - https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
docker-build:dockerhub:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
  stage: build
  script:
    - echo $DOCKERHUB_TOKEN
    - docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} .
    - docker tag ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}  
    - docker run ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG} 
    - docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}
    - echo "The image was succesfully pushed:" ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_TAG}   

docker-build:gitlab-registry:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u "gitlab-ci-token" -p "$CI_BUILD_TOKEN" $CI_REGISTRY
  stage: build
  script:
    - echo $DOCKERHUB_TOKEN
    - docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} .
    - docker tag ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} ${GITLAB_CONT_REGISTRY_IMG_TAG}
    - docker run ${GITLAB_CONT_REGISTRY_IMG_TAG}
    - docker push ${GITLAB_CONT_REGISTRY_IMG_TAG}
    - echo "The image was succesfully pushed:" ${GITLAB_CONT_REGISTRY_IMG_TAG}
